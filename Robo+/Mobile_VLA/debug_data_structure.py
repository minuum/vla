#!/usr/bin/env python3
"""
üîç Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞ ÎîîÎ≤ÑÍπÖ Ïä§ÌÅ¨Î¶ΩÌä∏
H5 ÌååÏùºÏùò Ïã§Ï†ú Íµ¨Ï°∞Î•º ÌôïÏù∏
"""

import h5py
import numpy as np
from pathlib import Path

def debug_data_structure():
    """Îç∞Ïù¥ÌÑ∞ Íµ¨Ï°∞ ÎîîÎ≤ÑÍπÖ"""
    
    data_path = "../../ROS_action/mobile_vla_dataset"
    
    # H5 ÌååÏùºÎì§ Ï∞æÍ∏∞
    h5_files = list(Path(data_path).glob("*.h5"))
    print(f"üìÅ Î∞úÍ≤¨Îêú H5 ÌååÏùº Ïàò: {len(h5_files)}")
    
    for h5_file in h5_files[:2]:  # Ï≤òÏùå 2Í∞úÎßå ÌôïÏù∏
        print(f"\nüîç {h5_file.name} Î∂ÑÏÑù:")
        
        try:
            with h5py.File(h5_file, 'r') as f:
                print(f"   üìä ÌÇ§ Î™©Î°ù: {list(f.keys())}")
                
                for key in f.keys():
                    dataset = f[key]
                    print(f"   üìã {key}:")
                    print(f"      - Shape: {dataset.shape}")
                    print(f"      - Dtype: {dataset.dtype}")
                    
                    # Ï≤òÏùå Î™á Í∞ú ÏÉòÌîå ÌôïÏù∏
                    if len(dataset.shape) > 0:
                        try:
                            sample = dataset[0]
                            print(f"      - Sample[0] shape: {sample.shape}")
                            print(f"      - Sample[0] dtype: {sample.dtype}")
                            
                            if len(sample.shape) == 3:  # [H, W, C] ÎòêÎäî [T, H, W]
                                print(f"      - Sample[0, 0] shape: {sample[0].shape}")
                                print(f"      - Sample[0, 0] dtype: {sample[0].dtype}")
                            
                            if len(sample.shape) == 4:  # [T, H, W, C]
                                print(f"      - Sample[0, 0] shape: {sample[0, 0].shape}")
                                print(f"      - Sample[0, 0] dtype: {sample[0, 0].dtype}")
                            
                            # actions ÌäπÎ≥Ñ Î∂ÑÏÑù
                            if key == 'actions':
                                print(f"      - Actions Ï†ÑÏ≤¥ shape: {dataset.shape}")
                                print(f"      - Actions[0] shape: {dataset[0].shape}")
                                print(f"      - Actions[0, 0] shape: {dataset[0, 0].shape}")
                                print(f"      - Actions[0, 0] Í∞í: {dataset[0, 0]}")
                            
                            # images ÌäπÎ≥Ñ Î∂ÑÏÑù
                            if key == 'images':
                                print(f"      - Images Ï†ÑÏ≤¥ shape: {dataset.shape}")
                                print(f"      - Images[0] shape: {dataset[0].shape}")
                                print(f"      - Images[0, 0] shape: {dataset[0, 0].shape}")
                                print(f"      - Images[0, 0] dtype: {dataset[0, 0].dtype}")
                                print(f"      - Images[0, 0] Í∞í Î≤îÏúÑ: {dataset[0, 0].min()} ~ {dataset[0, 0].max()}")
                                
                        except Exception as e:
                            print(f"      - Sample Î∂ÑÏÑù Ïã§Ìå®: {e}")
                
        except Exception as e:
            print(f"   ‚ùå Ïò§Î•ò: {e}")

if __name__ == "__main__":
    debug_data_structure()
