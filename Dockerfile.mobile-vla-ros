# ROS2 Humble + 기존 PyTorch 2.3.0 + CUDA + Mobile VLA
# 기존 작동하는 이미지에 ROS 설정 추가

FROM mobile_vla:pytorch-2.3.0-cuda

# 환경 변수 설정
ENV DEBIAN_FRONTEND=noninteractive
ENV ROS_DISTRO=humble
ENV ROS_DOMAIN_ID=42
ENV RMW_IMPLEMENTATION=rmw_fastrtps_cpp
ENV PYTHONPATH=/opt/ros/humble/lib/python3.8/site-packages:$PYTHONPATH

# CUDA 라이브러리 경로 설정 (기존 이미지의 CUDA 설정 유지)
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
ENV PATH=/usr/local/cuda/bin:$PATH

# 로케일 설정 (ROS2 요구사항)
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8

# ROS2 Humble 설치
RUN apt-get update && apt-get install -y \
    locales \
    && locale-gen en_US en_US.UTF-8 \
    && update-locale LC_ALL=en_US.UTF-8 LANG=en_US.UTF-8

RUN apt-get update && apt-get install -y \
    software-properties-common \
    && add-apt-repository universe \
    && apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    && curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg \
    && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(. /etc/os-release && echo $UBUNTU_CODENAME) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null

RUN apt-get update && apt-get install -y \
    ros-humble-desktop \
    ros-humble-cv-bridge \
    ros-humble-image-transport \
    ros-humble-camera-info-manager \
    ros-humble-sensor-msgs \
    ros-humble-geometry-msgs \
    ros-humble-std-msgs \
    ros-humble-std-srvs \
    ros-humble-rclpy \
    ros-humble-ament-cmake \
    ros-humble-ament-cmake-python \
    ros-humble-rosidl-default-generators \
    ros-humble-rosidl-default-runtime \
    python3-colcon-common-extensions \
    python3-rosdep \
    python3-rosinstall-generator \
    python3-vcstool \
    && rm -rf /var/lib/apt/lists/*

# rosdep 초기화
RUN rosdep init || true
RUN rosdep update

# ROS2 환경 설정 스크립트 생성 (CUDA 경로 포함)
RUN echo '#!/bin/bash' > /opt/ros/setup_ros.sh && \
    echo 'source /opt/ros/humble/setup.bash' >> /opt/ros/setup_ros.sh && \
    echo 'export ROS_DOMAIN_ID=42' >> /opt/ros/setup_ros.sh && \
    echo 'export RMW_IMPLEMENTATION=rmw_fastrtps_cpp' >> /opt/ros/setup_ros.sh && \
    echo 'export PYTHONPATH=/opt/ros/humble/lib/python3.8/site-packages:$PYTHONPATH' >> /opt/ros/setup_ros.sh && \
    echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> /opt/ros/setup_ros.sh && \
    echo 'export PATH=/usr/local/cuda/bin:$PATH' >> /opt/ros/setup_ros.sh && \
    echo 'export LANG=en_US.UTF-8' >> /opt/ros/setup_ros.sh && \
    echo 'export LC_ALL=en_US.UTF-8' >> /opt/ros/setup_ros.sh && \
    chmod +x /opt/ros/setup_ros.sh

# 워크스페이스용 CUDA 경로 복원 스크립트 생성
RUN echo '#!/bin/bash' > /opt/ros/restore_cuda.sh && \
    echo 'export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH' >> /opt/ros/restore_cuda.sh && \
    echo 'export PATH=/usr/local/cuda/bin:$PATH' >> /opt/ros/restore_cuda.sh && \
    echo 'export CUDA_HOME=/usr/local/cuda' >> /opt/ros/restore_cuda.sh && \
    chmod +x /opt/ros/restore_cuda.sh

# .bashrc에 ROS 환경 설정 추가
RUN echo 'source /opt/ros/setup_ros.sh' >> /root/.bashrc

# ROS2 워크스페이스 디렉토리 생성
RUN mkdir -p /workspace/ros2_ws/src

# 컨테이너 간 통신을 위한 네트워크 설정
RUN echo 'export ROS_LOCALHOST_ONLY=0' >> /root/.bashrc && \
    echo 'export ROS_DISCOVERY_SERVER=:11811' >> /root/.bashrc

# 포트 노출 (ROS2 통신용)
EXPOSE 11811 7400-7500

# 기본 명령어
CMD ["/bin/bash"]
