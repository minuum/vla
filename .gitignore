# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop_eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtualenv
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# ROS Catkin/Colcon Build Artifacts
ROS_action/build/
ROS_action/install/
ROS_action/log/
whisper2/ros2_ws/build/
whisper2/ros2_ws/install/
whisper2/ros2_ws/log/
devel/
devel_isolated/
build_isolated/
install_isolated/

# IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Docker - poetry.lock might be version controlled, but Dockerfiles referencing specific versions could be an issue if not managed.
# If Docker images are built and stored elsewhere, you might not need to ignore Dockerfile.
# Consider your Docker strategy.

# Poetry
# .poetry.lock # Usually version controlled, but if generating from pyproject.toml in CI/CD, can be ignored.
# .pdm.lock
# pdm.lock
# poetry.lock

# Jupyter Notebook Checkpoints
.ipynb_checkpoints

# Log files
*.log
logs/

# Temporary files
*.tmp
*~
*.whl

# VLA 모델 관련
ROS_action/.paligemma_ros_cache/
Model_ws/.paligemma_ros_cache/
Model_ws/build/
Model_ws/install/
Model_ws/log/
*.pt
*.pth
*.bin
*.safetensors
.vla_models_cache/
*.lock

# 추가 Python 파일
*.pyc
*.pyo
<<<<<<< HEAD
ROS_action/src/*.whl
=======
ROS_action/src/*.whl

# Model_ws 빌드 아티팩트 및 캐시
Model_ws/.paligemma_ros_cache/
Model_ws/build/
Model_ws/install/
Model_ws/log/
*.lock
>>>>>>> 460f1aa (feat: VLA 노드 Model_ws 추가 및 핵심 ROS 노드들 개선)
