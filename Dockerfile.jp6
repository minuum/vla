# =============================================================================
# 🚀 Mobile VLA RoboVLMs Docker 환경 - JetPack 6 (Ubuntu 22.04) 기반 v2
# =============================================================================

# 베이스 이미지: JetPack 6.0 (L4T R36.3) 호환 PyTorch 2.1 이미지
FROM nvcr.io/nvidia/l4t-pytorch:r36.3.0-pth2.1-py3

# 메타데이터
LABEL maintainer="Mobile VLA RoboVLMs Team"
LABEL description="Mobile VLA RoboVLMs System for JetPack 6 with ROS2 Humble"
LABEL version="2.1-robovlms-jp6"

USER root

# 환경 변수 설정
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV CUDA_HOME=/usr/local/cuda
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=all
ENV PATH="/root/.local/bin:/usr/local/cuda/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
ENV PYTHONUNBUFFERED=1
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
ENV HF_HOME=/root/.cache/huggingface
ENV ROS_DOMAIN_ID=42
ENV HUGGING_FACE_HUB_TOKEN=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

# 1. 시스템 패키지 업데이트 및 기본 도구 설치 (coreutils 추가)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        coreutils hdf5-tools libhdf5-dev \
        curl gnupg lsb-release \
        git vim nano htop tree \
        build-essential cmake pkg-config \
        libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
        libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base \
        gstreamer1.0-plugins-good gstreamer1.0-plugins-bad \
        gstreamer1.0-libav gstreamer1.0-tools \
        libasound2-dev portaudio19-dev \
        openssh-client rsync \
    && rm -rf /var/lib/apt/lists/*

# 2. ROS 2 Humble 설치 (Ubuntu 22.04용)
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        python3-pip \
        ros-humble-desktop \
        ros-dev-tools \
        python3-colcon-common-extensions \
        python3-rosdep \
        ros-humble-cv-bridge \
        ros-humble-image-transport \
        ros-humble-camera-info-manager \
    && rm -rf /var/lib/apt/lists/*

# 3. rosdep 초기화
RUN rosdep init || true && rosdep update

# 4. Python 패키지 설치
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir \
        Pillow \
        numpy \
        requests \
        pyserial \