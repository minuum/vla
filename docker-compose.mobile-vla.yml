version: '3.8'

services:
  # =============================================================================
  # 🚀 Mobile VLA 메인 컨테이너
  # PyTorch 2.3.0 + VLA 추론 + ROS2 노드들
  # =============================================================================
  mobile_vla_main:
    build:
      context: .
      dockerfile: Dockerfile.mobile-vla
    container_name: mobile_vla_main
    image: mobile_vla:pytorch-2.3.0-cuda
    
    # GPU 및 하드웨어 접근
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - XAUTHORITY=${XAUTHORITY}
    
    # 네트워크 설정
    network_mode: host
    
    # 볼륨 마운트
    volumes:
      # 호스트 CUDA 라이브러리 마운트
      - /usr/local/cuda:/usr/local/cuda:ro
      - /usr/lib/aarch64-linux-gnu:/usr/lib/aarch64-linux-gnu:ro
      # 프로젝트 코드
      - ./vla:/workspace/vla
      - ./ROS_action:/workspace/vla/ROS_action
      # X11 디스플레이
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # 카메라 장치
      - /dev/video0:/dev/video0:rw
      # 로봇 시리얼 포트 (필요시)
      - /dev/ttyUSB0:/dev/ttyUSB0:rw
      - /dev/ttyUSB1:/dev/ttyUSB1:rw
      # 키보드 입력
      - /dev/input:/dev/input:ro
    
    # 권한 설정
    privileged: true
    devices:
      - /dev/video0:/dev/video0
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
    
    # 포트 노출
    ports:
      - "8888:8888"  # Jupyter Notebook
      - "6006:6006"  # TensorBoard
      - "11311:11311"  # ROS Master
    
    # 헬스체크
    healthcheck:
      test: ["CMD", "/usr/local/bin/healthcheck.sh"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # 시작 명령어
    command: >
      bash -c "
        echo '🚀 Mobile VLA 시스템 시작...' &&
        echo '📊 시스템 상태 확인...' &&
        /usr/local/bin/healthcheck.sh &&
        echo '🤖 ROS2 환경 설정...' &&
        source /opt/ros/humble/setup.bash &&
        source /workspace/vla/ROS_action/install/setup.bash &&
        echo '🎯 노드 실행 준비 완료!' &&
        echo '📋 사용 가능한 명령어:' &&
        echo '   ros2 run camera_pub camera_publisher_continuous' &&
        echo '   ros2 run vla_inference vla_inference_node' &&
        echo '   ros2 run robot_control robot_control_node' &&
        echo '   ros2 run mobile_vla_data_collector mobile_vla_data_collector' &&
        echo '' &&
        bash
      "
    
    # 재시작 정책
    restart: unless-stopped
    
    # 리소스 제한
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  # =============================================================================
  # 📊 모니터링 컨테이너 (선택사항)
  # 시스템 상태 및 로그 모니터링
  # =============================================================================
  mobile_vla_monitor:
    image: nginx:alpine
    container_name: mobile_vla_monitor
    ports:
      - "8080:80"
    volumes:
      - ./monitoring:/usr/share/nginx/html:ro
    depends_on:
      - mobile_vla_main
    restart: unless-stopped
    profiles:
      - monitoring

  # =============================================================================
  # 🗄️ 데이터베이스 컨테이너 (선택사항)
  # 실험 데이터 저장
  # =============================================================================
  mobile_vla_db:
    image: postgres:13-alpine
    container_name: mobile_vla_db
    environment:
      POSTGRES_DB: mobile_vla
      POSTGRES_USER: vla_user
      POSTGRES_PASSWORD: vla_password
    volumes:
      - mobile_vla_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    profiles:
      - database

# =============================================================================
# 📦 볼륨 정의
# =============================================================================
volumes:
  mobile_vla_data:
    driver: local

# =============================================================================
# 🌐 네트워크 정의
# =============================================================================
networks:
  default:
    name: mobile_vla_network
    driver: bridge