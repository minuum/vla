# =============================================================================
# 🚀 Mobile VLA RoboVLMs Docker 환경 - 최종 버전
# 베이스: NVIDIA l4t-ml (JetPack 6 공식 권장 이미지)
# =============================================================================

# 베이스 이미지: JetPack 6.0 (L4T R36.3) 호환 머신러닝 이미지
FROM nvcr.io/nvidia/l4t-ml:r36.3.0-py3

# 메타데이터
LABEL maintainer="Mobile VLA RoboVLMs Team"
LABEL description="Mobile VLA RoboVLMs System for JetPack 6 with ROS2 Humble"
LABEL version="3.0-robovlms-final"

USER root

# 환경 변수 설정
ENV DEBIAN_FRONTEND=noninteractive
ENV LANG=en_US.UTF-8
ENV LC_ALL=en_US.UTF-8
ENV RMW_IMPLEMENTATION=rmw_cyclonedds_cpp
ENV ROS_DOMAIN_ID=42
ENV HUGGING_FACE_HUB_TOKEN=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

# 1. 시스템 패키지 업데이트 및 ROS Humble 설치에 필요한 기본 도구 설치
# l4t-ml에는 많은 도구가 이미 설치되어 있으므로, 설치 목록을 최소화합니다.
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        curl gnupg lsb-release \
        git vim nano htop tree \
        gstreamer1.0-tools \
    && rm -rf /var/lib/apt/lists/*

# 2. ROS 2 Humble 설치
RUN curl -sSL https://raw.githubusercontent.com/ros/rosdistro/master/ros.key -o /usr/share/keyrings/ros-archive-keyring.gpg && \
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/ros-archive-keyring.gpg] http://packages.ros.org/ros2/ubuntu $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/ros2.list > /dev/null && \
    apt-get update && \
    apt-get install -y --no-install-recommends \
        ros-humble-ros-base \
        ros-dev-tools \
        ros-humble-cv-bridge \
        ros-humble-image-transport \
        ros-humble-camera-info-manager \
    && rm -rf /var/lib/apt/lists/*

# 3. rosdep 초기화
RUN rosdep init || true && rosdep update

# 4. Python 패키지 설치
# l4t-ml에 transformers, accelerate 등이 이미 포함되어 있을 수 있으므로 --upgrade 옵션 사용
RUN pip3 install --no-cache-dir --upgrade pip && \
    pip3 install --no-cache-dir --upgrade \
        Pillow \
        requests \
        pyserial \
        transformers \
        tokenizers \
        accelerate \
        huggingface_hub

# 5. 작업공간 및 .bashrc 설정
RUN mkdir -p /workspace/vla/ROS_action && \
    echo "" >> /root/.bashrc && \
    echo "# ROS 2 Humble environment setup" >> /root/.bashrc && \
    echo "source /opt/ros/humble/setup.bash" >> /root/.bashrc && \
    echo "if [ -f \"/workspace/vla/ROS_action/install/setup.bash\" ]; then source /workspace/vla/ROS_action/install/setup.bash; fi" >> /root/.bashrc && \
    echo "alias cuda-test='python3 -c \"import torch; print(f\\\"CUDA Available: {torch.cuda.is_available()}\\\")\"'" >> /root/.bashrc && \
    echo "# 환영 메시지" >> /root/.bashrc && \
    echo "echo \"🚀 RoboVLMs Docker 환경 - JetPack 6 + l4t-ml 기반\"" >> /root/.bashrc && \
    echo "echo \"🔧 CUDA: \$(cuda-test 2>/dev/null | grep -o 'True\\|False' || echo 'Unknown')\"" >> /root/.bashrc

# 6. 작업 디렉토리 설정
WORKDIR /workspace/vla

# 7. 기본 명령어 설정
CMD ["/bin/bash"]